graph(%x : Float(*, *)
      %hx : Float(*, *)
      %cx : Float(*, *)
      %w_ih : Float(*, *)
      %w_hh : Float(*, *)
      %b_ih : Float(*)
      %b_hh : Float(*)) {
  %8 : Float(*, *), %9 : Float(*, *) = prim::DifferentiableGraph_0(%w_ih, %x, %w_hh, %hx, %b_ih, %b_hh, %cx)
  return (%9, %8);
}
with prim::DifferentiableGraph_0 = graph(%1 : Float(*, *)
      %2 : Float(*, *)
      %3 : Float(*, *)
      %4 : Float(*, *)
      %5 : Float(*)
      %6 : Float(*)
      %7 : Float(*, *)) {
  %8 : Float(*, *) = aten::t(%1)
  %9 : Float(*, *) = aten::mm(%2, %8)
  %10 : Float(*, *) = aten::t(%3)
  %11 : Float(*, *) = aten::mm(%4, %10)
  %12 : int = prim::Constant[value=1]()
  %13 : Float(*, *) = prim::FusionGroup_0[device=0](%5, %9, %11)
  %14 : Dynamic[] = prim::ListConstruct(%13, %6)
  %15 : Dynamic[] = aten::broadcast_tensors(%14)
  %16 : Dynamic, %17 : Dynamic = prim::ListUnpack(%15)
  %hy : Float(*, *), %19 : Float(*, *), %cy : Float(*, *), %outgate.1 : Float(*, *), %cellgate.1 : Float(*, *), %forgetgate.1 : Float(*, *), %ingate.1 : Float(*, *) = prim::FusionGroup_1[device=0](%7, %16, %17)
  return (%cy, %hy, %8, %10, %ingate.1, %forgetgate.1, %cellgate.1, %outgate.1, %19);
}
with prim::FusionGroup_0 = graph(%1 : Float(*)
      %2 : Float(*, *)
      %3 : Float(*, *)) {
  %4 : int = prim::Constant[value=1]()
  %5 : Float(*, *) = aten::add(%2, %3, %4)
  %6 : int = prim::Constant[value=1]()
  %7 : Float(*, *) = aten::add(%5, %1, %6)
  return (%7);
}
with prim::FusionGroup_1 = graph(%1 : Float(*, *)
      %2 : Dynamic
      %3 : Dynamic) {
  %4 : Float(*, *), %5 : Float(*, *), %6 : Float(*, *), %7 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%3)
  %8 : Float(*, *), %9 : Float(*, *), %10 : Float(*, *), %11 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%2)
  %12 : int = prim::Constant[value=1]()
  %13 : Float(*, *) = aten::add(%8, %4, %12)
  %14 : int = prim::Constant[value=1]()
  %15 : Float(*, *) = aten::add(%9, %5, %14)
  %16 : int = prim::Constant[value=1]()
  %17 : Float(*, *) = aten::add(%10, %6, %16)
  %18 : int = prim::Constant[value=1]()
  %19 : Float(*, *) = aten::add(%11, %7, %18)
  %ingate.1 : Float(*, *) = aten::sigmoid(%13)
  %forgetgate.1 : Float(*, *) = aten::sigmoid(%15)
  %cellgate.1 : Float(*, *) = aten::tanh(%17)
  %outgate.1 : Float(*, *) = aten::sigmoid(%19)
  %24 : Float(*, *) = aten::mul(%forgetgate.1, %1)
  %25 : Float(*, *) = aten::mul(%ingate.1, %cellgate.1)
  %26 : int = prim::Constant[value=1]()
  %cy : Float(*, *) = aten::add(%24, %25, %26)
  %28 : Float(*, *) = aten::tanh(%cy)
  %hy : Float(*, *) = aten::mul(%outgate.1, %28)
  return (%hy, %28, %cy, %outgate.1, %cellgate.1, %forgetgate.1, %ingate.1);
}
